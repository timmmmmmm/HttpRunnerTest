config:
    name: "Login"
    variables:
        twoFAToken: "check"
        secret: ${ENV(secret)}
        userToken: ""
    base_url: ${ENV(base_url)}
    export:
        - userToken

teststeps:
-   name: Login with username
    api: api/api_login.yml
    extract:
        twoFAToken: body.data.token

-   name: 2FA check
    api: api/api_user_check_2FA.yml
    extract:
        userToken: body.data.token

#-
#    name: Login with username
#    variables:
#        userName: TimmyHong
#        password: 02ee0be1761db38a2ab3cb3adab0d4886def79f00fab7ff2c4ec115c26cd3b71
#        deviceFingerprint: _vmhjlh1667276599542
#    request:
#        headers:
#            content-type: application/json
#            Accept: application/json
#            user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
#                (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36
#        params:
#            password: $password
#            captchaId: false
#            captchaNumber: ''
#            deviceFingerprint: $deviceFingerprint
#            loginName: $userName
#            keepLogin: false
#        method: POST
#        url: /api/login/
#    validate:
#        - eq: ["status_code", 200]
#        - eq: ["body.code", 1]
#
#-   name: 2FA check
#    request:
#        headers:
#            content-type: application/json
#            Accept: application/json
#            user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
#                (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36
#        params:
#            token: $twoFAToken
#            otpCode: ${add_2FA_code($secret)}
#        method: POST
#        url: /api/user/check/2FA
#    extract:
#        userToken: body.data.token
#    validate:
#        - eq: ["status_code", 200]
