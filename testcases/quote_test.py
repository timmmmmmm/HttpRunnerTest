# NOTE: Generated By HttpRunner v4.3.0
# FROM: testcases/quote.yml
from httprunner import HttpRunner, Config, Step, RunRequest


class TestCaseQuote(HttpRunner):

    config = Config("OTC quote test").base_url("${ENV(base_url)}")

    teststeps = [
        Step(
            RunRequest("/api/otc/api/v1/quote")
            .with_variables(**{"var1": "var1", "var2": "var2"})
            .post("/api/otc/api/v1/quote")
            .with_headers(
                **{
                    "content-type": "application/json",
                    "lang": "en",
                    "token": "USER_TOKEN_LOGIN_ad89165c8f9a3cf052d4dfb92836cf90_e85272c974794ed284691111ae59678b",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36",
                }
            )
            .with_json(
                {
                    "baseCurrency": "BTC",
                    "orderAmountInOrderCurrency": 0,
                    "orderCurrency": "USD",
                    "orderSizeInBaseCurrency": "1",
                    "side": "buy",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.status", 30001)
            .assert_equal("body.quoteValidDurationMs", 6000)
            .assert_equal("body.quoteAmountToReceive", 1.0)
            .assert_equal("body.quoteCurrencyToReceiveIn", "BTC")
            .assert_equal("body.quoteCurrencyToDeductIn", "USD")
            .assert_equal("body.memo", None)
            .assert_equal("body.clOrderId", None)
            .assert_equal("body.side", "BUY")
        ),
    ]


if __name__ == "__main__":
    TestCaseQuote().test_start()
